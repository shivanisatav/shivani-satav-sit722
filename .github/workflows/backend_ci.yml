name: Backend CI - Test and Push to ACR

on:
  push:
    branches:
      - testing

jobs:
  test_and_lint_backends:
    runs-on: ubuntu-latest

    services:
      # Product DB container
      product_db:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # Order DB container
      order_db:
        image: postgres:15
        ports:
          - 5433:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # Customer DB container
      customer_db:
        image: postgres:15
        ports:
          - 5434:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: customer
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          for req in backend/*/requirements.txt; do
            pip install -r "$req"
          done
          pip install pytest httpx psycopg2-binary

      # --- Product Service Tests ---
      - name: Wait for Product DB
        run: |
          echo "Waiting for Product DB to be ready..."
          for i in {1..20}; do
            pg_isready -h product_db -p 5432 -U postgres && break
            echo "Product DB not ready yet..."
            sleep 3
          done

      - name: Run product_service tests
        working-directory: backend/product_service
        env:
          POSTGRES_HOST: product_db
          POSTGRES_PORT: 5432
          POSTGRES_DB: products
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

      # --- Order Service Tests ---
      - name: Wait for Order DB
        run: |
          echo "Waiting for Order DB to be ready..."
          for i in {1..20}; do
            pg_isready -h order_db -p 5432 -U postgres && break
            echo "Order DB not ready yet..."
            sleep 3
          done

      - name: Run order_service tests
        working-directory: backend/order_service
        env:
          POSTGRES_HOST: order_db
          POSTGRES_PORT: 5432
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

      # --- Customer Service Tests ---
      - name: Wait for Customer DB
        run: |
          echo "Waiting for Customer DB to be ready..."
          for i in {1..20}; do
            pg_isready -h customer_db -p 5432 -U postgres && break
            echo "Customer DB not ready yet..."
            sleep 3
          done

      - name: Run customer_service tests
        working-directory: backend/customer_service
        env:
          POSTGRES_HOST: customer_db
          POSTGRES_PORT: 5432
          POSTGRES_DB: customer
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

  build-test-push:
    runs-on: ubuntu-latest
    needs: test_and_lint_backends

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build Product Service Docker image
        working-directory: backend/product_service
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/product-service:latest .

      - name: Build Order Service Docker image
        working-directory: backend/order_service
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/order-service:latest .

      - name: Build Customer Service Docker image
        working-directory: backend/customer_service
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/customer-service:latest .

      - name: Push backend images to ACR
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/product-service:latest
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/order-service:latest
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/customer-service:latest
