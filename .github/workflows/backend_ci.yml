# Trigger testing 
name: Backend CI - Test and Push to ACR

on:
  push:
    branches:
      - testing

jobs:
  test_and_lint_backends:
    runs-on: ubuntu-latest

    services:
      # Product DB container
      product_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      # Order DB container
      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

      # Customer DB container
      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: customer
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          for req in backend/*/requirements.txt; do
            pip install -r "$req"
          done
          pip install pytest httpx

      - name: Run product_service tests
        working-directory: backend/product_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: products
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

      - name: Run order_service tests
        working-directory: backend/order_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q
      
      - name: Run customer_service tests
        working-directory: backend/customer_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5434
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build and test Customer Service
        run: |
          cd backend/customer_service
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/customer-service:latest .
          # run unit tests
          docker run --rm ${{ secrets.ACR_NAME }}.azurecr.io/customer-service:latest pytest /code/tests 

      - name: Build and test Order Service
        run: |
          cd backend/order_service
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/order-service:latest .
          docker run --rm ${{ secrets.ACR_NAME }}.azurecr.io/order-service:latest pytest /code/tests

      - name: Build and test Product Service
        run: |
          cd backend/product_service
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/product-service:latest .
          docker run --rm ${{ secrets.ACR_NAME }}.azurecr.io/product-service:latest pytest /code/tests
      
      - name: Push backend images to ACR
        run: |
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/customer-service:latest
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/order-service:latest
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/product-service:latest

